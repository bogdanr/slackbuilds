#!/bin/sh

# Slackware build script for arduino

# Copyright 2015  Mario Preksavec, Zagreb, Croatia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=arduino
VERSION=${VERSION:-1.8.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  LIBDIRSUFFIX=""
  SRCSUFFIX="32"
elif [ "$ARCH" = "i686" ]; then
  LIBDIRSUFFIX=""
  SRCSUFFIX="32"
elif [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  SRCSUFFIX="64"
else
  echo "$ARCH is not supported."
  exit 1
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION-linux$SRCSUFFIX.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Manual install ensues
mkdir -p $PKG/opt/$PRGNAM
mv arduino examples hardware lib libraries reference tools $PKG/opt/$PRGNAM

# Make it a bit more user friendly
mkdir -p $PKG/usr/{bin,share/applications}
cp $CWD/arduino.desktop $PKG/usr/share/applications/$PRGNAM.desktop
ln -s /opt/$PRGNAM/arduino $PKG/usr/bin/$PRGNAM

# Add arduino-builder in the mix
ArduinoBuilderVersion="1.3.25"
wget -nc https://github.com/arduino/arduino-builder/releases/download/$ArduinoBuilderVersion/arduino-builder-linux$SRCSUFFIX-$ArduinoBuilderVersion.tar.bz2 -P $TMP
tar xf $TMP/arduino-builder-linux$SRCSUFFIX-$ArduinoBuilderVersion.tar.bz2 -C $PKG/opt/$PRGNAM/

# Add the ESP8266 support
git clone https://github.com/esp8266/Arduino.git $PKG/opt/$PRGNAM/hardware/esp8266com/esp8266
(cd $PKG/opt/$PRGNAM/hardware/esp8266com/esp8266/tools && python get.py)
sed -i 's/{runtime.tools.ctags.path}/\/opt\/arduino\/tools\/ctags\/5.8-arduino11/' $PKG/opt/$PRGNAM/hardware/platform.txt

# Handle all the extra libraries
NeoPixelVersion="1.0.6"
wget -nc https://github.com/adafruit/Adafruit_NeoPixel/archive/v$NeoPixelVersion.tar.gz -P $TMP
tar xf $TMP/v$NeoPixelVersion.tar.gz -C $TMP
mv $TMP/Adafruit_NeoPixel-$NeoPixelVersion $PKG/opt/$PRGNAM/libraries/Adafruit_NeoPixel
rm -r $PKG/opt/$PRGNAM/libraries/Adafruit_NeoPixel/.github

GFXVersion="1.1.8"
wget -nc https://github.com/adafruit/Adafruit-GFX-Library/archive/$GFXVersion.tar.gz -P $TMP
tar xf $TMP/$GFXVersion.tar.gz -C $TMP
mv $TMP/Adafruit-GFX-Library-$GFXVersion $PKG/opt/$PRGNAM/libraries/Adafruit-GFX-Library

ArduinoJsonVersion="5.8.3"
wget -nc https://github.com/bblanchon/ArduinoJson/archive/v$ArduinoJsonVersion.tar.gz -P $TMP
tar xf $TMP/v$ArduinoJsonVersion.tar.gz -C $TMP
mv $TMP/ArduinoJson-$ArduinoJsonVersion $PKG/opt/$PRGNAM/libraries/ArduinoJson
rm -r $PKG/opt/$PRGNAM/libraries/ArduinoJson/.github

Blynk="0.4.6"
wget -nc https://github.com/blynkkk/blynk-library/archive/v$Blynk.tar.gz -P $TMP
tar xf $TMP/v$Blynk.tar.gz -C $TMP
mv $TMP/blynk-library-$Blynk $PKG/opt/$PRGNAM/libraries/blynk-library

WiFiManager="0.12"
wget -nc https://github.com/tzapu/WiFiManager/archive/$WiFiManager.tar.gz -P $TMP
tar xf $TMP/$WiFiManager.tar.gz -C $TMP
mv $TMP/WiFiManager-$WiFiManager $PKG/opt/$PRGNAM/libraries/WiFiManager


# Hack for missing libtinfo.so.5 and kreadconfig5
ln -s /lib$LIBDIRSUFFIX/libncurses.so.5 $PKG/opt/$PRGNAM/hardware/tools/avr/lib/libtinfo.so.5
ln -s /usr/bin/kreadconfig $PKG/usr/bin/kreadconfig5

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a revisions.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-txz}
