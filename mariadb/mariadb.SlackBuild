#!/bin/sh

# Copyright 2008, 2009, 2010, 2012, 2013  Patrick J. Volkerding, Sebeka, Minnesota, USA
# Copyright 2011, 2012, 2013  Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Build and install MySQL on Slackware
# by:  David Cantrell <david@slackware.com>
# MariaDB conversion by:  Heinz Wiesinger <pprkut@liwjatan.at>
# Also maintained by:  Patrick Volkerding <volkerdi@slackware.com>

PKGNAM=mariadb
VERSION=${VERSION:-$(echo ${PKGNAM}-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# To reduce the package size, the embedded server my be omitted.  Currently
# only amarok uses this.  To build without embedded support, set this to NO. 
EMBEDDED=${EMBEDDED:-NO}

# Add a description tag to the $BUILD.  This is used by
# "build_embedded_package.sh" to mark packages containing the embedded server,
# but can optionally be used with any kind of custom tag desired.
TAG=${TAG:-}

# Don't keep the large static libraries by default:
KEEPSTATIC=${KEEPSTATIC:-NO}

# Don't keep the test suite by default:
KEEPTESTS=${KEEPTESTS:-NO}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i686 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}
CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-${PKGNAM}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf ${PKGNAM}-$VERSION
tar xvf $CWD/${PKGNAM}-$VERSION.tar.gz || exit 1
cd ${PKGNAM}-$VERSION

if ls $CWD/*.diff.gz 1> /dev/null 2> /dev/null ; then
  for patch in $CWD/*.diff.gz ; do
    zcat $patch | patch -p1 --verbose || exit 1
  done
fi

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

mkdir build
cd build
cmake \
  -DCMAKE_C_FLAGS="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS="$SLKCFLAGS -felide-constructors -fno-exceptions -fno-rtti" \
  -DBUILD_CONFIG=mysql_release \
  -DFEATURE_SET="large" \
  -DINSTALL_LAYOUT="RPM" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DINSTALL_LIBDIR="lib${LIBDIRSUFFIX}" \
  -DINSTALL_SBINDIR=libexec \
  -DINSTALL_INCLUDEDIR=include/mysql \
  -DINSTALL_MYSQLSHAREDIR=share/mysql \
  -DINSTALL_SQLBENCHDIR= \
  -DINSTALL_MYSQLTESTDIR=mysql-test \
  -DINSTALL_MANDIR=man \
  -DINSTALL_PLUGINDIR="lib${LIBDIRSUFFIX}/mysql/plugin" \
  -DINSTALL_SCRIPTDIR=bin \
  -DINSTALL_SUPPORTFILESDIR=share/mysql \
  -DINSTALL_MYSQLDATADIR="/var/lib/mysql" \
  -DINSTALL_DOCREADMEDIR="doc/${PKGNAM}-$VERSION" \
  -DINSTALL_DOCDIR="doc/${PKGNAM}-$VERSION" \
  -DMYSQL_DATADIR="/var/lib/mysql" \
  -DMYSQL_UNIX_ADDR="/var/run/mysql/mysql.sock" \
  -DWITH_EXTRA_CHARSETS=complex \
  -DWITH_INNOBASE_STORAGE_ENGINE=1 \
  -DWITH_ARIA_STORAGE_ENGINE=OFF \
  -DWITH_UNIT_TESTS=OFF \
  -DENABLED_LOCAL_INFILE=ON \
  -DWITH_EMBEDDED_SERVER=${EMBEDDED} \
  -DWITH_READLINE=ON \
  -DWITH_SSL=system \
  -DWITH_ZLIB=system \
  -DMANUFACTURER="NimbleX" \
  ..

# This doesn't seem to do anything
#  -DWITH_SPHINX_STORAGE_ENGINE=OFF \

# This only saves 200K
#  -DWITH_XTRADB_STORAGE_ENGINE=OFF \

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG

# Leave build directory:
cd ..

if [ "$KEEPSTATIC" = "NO" ]; then
  # Remove large static libraries:
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqlclient.a
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqlclient_r.a
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqld.a
fi

if [ "$KEEPTESTS" = "NO" ]; then
  # Do not include the test suite:
  rm -rf $PKG/usr/mysql-test
fi

# The ./configure option to omit this has gone away, so we'll omit it
# the old-fashioned way.  It's all in the source tarball if you need it.
rm -rf $PKG/usr/sql-bench
rm -rf $PKG/usr/bin/mysql_client_test

# This is the directory where databases are stored
mkdir -p $PKG/var/lib/mysql
chown mysql.mysql $PKG/var/lib/mysql
chmod 0750 $PKG/var/lib/mysql

# This is where the socket is stored
mkdir -p $PKG/var/run/mysql
chown mysql.mysql $PKG/var/run/mysql
chmod 0755 $PKG/var/run/mysql

# Add init script:
mkdir -p $PKG/etc/rc.d
# This is installed chmod 644 so that the server does not run by default.
zcat $CWD/rc.mysqld.gz > $PKG/etc/rc.d/rc.mysqld.new
rm -rf $PKG/etc/init.d

# Install mysqlaccess.conf
install -m 644 scripts/mysqlaccess.conf $PKG/etc/mysqlaccess.conf.new

# Install systemd stuff
install -m 755 packaging/rpm-oel/mysql-systemd-start $PKG/usr/bin/mysql-systemd-start
mkdir -p $PKG/lib/systemd/system
install -m 644 $CWD/mysqld.service $PKG/lib/systemd/system
install -m 644 $CWD/datadir.cnf $PKG/etc/my.cnf.d/


# Mark config files under /etc as .new
mv $PKG/etc/my.cnf $PKG/etc/my.cnf.new
mv $PKG/etc/logrotate.d/mysql $PKG/etc/logrotate.d/mysql.new
for i in client mysql-clients server datadir; do
  mv $PKG/etc/my.cnf.d/$i.cnf $PKG/etc/my.cnf.d/$i.cnf.new
done

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/${PKGNAM}-$VERSION-$ARCH-${BUILD}${TAG}.txz

